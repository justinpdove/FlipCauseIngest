<apex:page >
<apex:includeScript value="/soap/ajax/15.0/connection.js"/>
<head>
</head>
<body>
<p/><div id="title"><h1> Bogor 4 Regional Dashboard</h1></div><p/>
<div id="subtitle"></div>
<br/><br/><img id="Chart1" src=""/>
<br/><br/><br/><br/><img id="Chart2" src=""/>
<br/><br/><br/><br/><img id="Chart3" src=""/>
<br/><br/><b>Recruiting and Admissions Status by Stage</b><br/><br/>
<table border="1"><tr>
        <th>Stage</th>
        <th>Current</th>
        <th>CTD</th>
        <th>Target</th>
        <th>Target Date</th>
    </tr><tr>
        <td>Fit Assessment</td>
        <td id="FitCurrent"></td>
        <td id="FitEver"></td>
        <td>30</td>
        <td>5/8/09</td>
    </tr><tr>
        <td>Application</td>
        <td id="AppCurrent"></td>
        <td id="AppEver"></td>
        <td>24</td>
        <td>6/26/09</td>
    </tr><tr>
        <td>Interviews</td>
        <td id="IntCurrent"></td>
        <td id="IntEver"></td>
        <td>18</td>
        <td>8/28/09</td>
    </tr><tr>
        <td>Recommended</td>
        <td id="RecCurrent"></td>
        <td id="RecEver"></td>
        <td>14</td>
        <td>9/28/09</td>
    </tr><tr>
        <td>Accepted</td>
        <td id="AccCurrent"></td>
        <td id="AccEver"></td>
        <td>12</td>
        <td>10/14/09</td>
</tr></table>

</body>

<script type="text/javascript">
// Regional Dashboard created for Rare Conservation by Peter Bender of Exponent Partners
// This is a VisualForce page with Javascript, which allows Rare to cut/paste the page to run it with different hard-coded parameters.  There is no Apex, no controller, and the Visualforce is only used as a container for the a custom page.  All logic and data access is done by HTML & javascript.
// This page queries the salesforce database directly, does some minor calculations, then sends the data to chart to a google API which creates the chart in the form of an image, which is then drawn on the screen.
// To learn more about google charts and the options available go to http://code.google.com/apis/chart/
//
    sforce.connection.sessionId = '{!$Api.Session_ID}';
    var Target, ScaleMax, ScalingString, Loc, Cohort, ChartPath, MarkerStart, MarkerEnd, oCountTotal, oCountOpen, CountTotal, CountOpen, ChartEnd;
    var Chart1URL, Chart2URL, PrideCohort;
// STATIC VALUES section
    ChartPath = "http://chart.apis.google.com/chart?chs=600x130";
// end STATIC VALUES section

// PAGE SETTINGS section *** These are the core settings which affect each chart's data as well as the page titling
    Loc = "Bogor Agricultural University, Indonesia (Bahasa Indonesia)"; // Lead location picklist value
    Cohort = "February 2010"; // Lead Cohort picklist value
    PrideCohort = "Bogor 4"; // Pride Applicant (Case) picklist value
// end PAGE SETTINGS section

document.getElementById("subtitle").innerHTML=Loc + " - " + Cohort;

// ========================== CHART 1 ========================== 
// copy this entire section to create a new chart

// CHART MODIFY section *** This section contains the variables that can easily be changed to affect each chart
    Target = 75;         // an integer: draws a red line on the chart at the specified number of leads. Also adds this information to the title of the chart.
    ScaleMax = 0;        // an integer: highest number on the chart scale.  If this number is zero, then the scale will be automatically be calculated to be 25% higher than the highest number on the chart.
    ScalingString = "";  // a string: example "|0|5|10|15|20" - This is a string consisting of a pipe (bar) character followed by a number.  The first is at the bottom of the char, the last is at the top of the chart, and the rest are spread out evenly between the first and last.  You should make the ScaleMax value the one to be at the top of the chart, otherwise the scaling information wont make sense to users. If this is left blank it will automatically create scale labels at zero, 1/4, 1/2, 3/4, and max
// end CHART MODIFY section

// CHART CREATION section
    oCountTotal = sforce.connection.query("select count() from Lead where Applying_for_Program_at__c = '" + Loc + "' and Date_Seeking_Admission__c = '" + Cohort + "'");
    oCountOpen = sforce.connection.query("select count() from Lead where Applying_for_Program_at__c = '" + Loc + "' and Date_Seeking_Admission__c = '" + Cohort + "' and (Status = 'EOI Not Screened' or Status = 'Open')");
    CountTotal = oCountTotal.size;
    CountOpen = oCountOpen.size;
    ChartEnd = CountTotal - CountOpen;
    if (ScaleMax == 0) {
        ScaleMax = parseInt(CountTotal) + (parseInt(CountTotal) * .25);
    }
    if (ScalingString == "") {
        ScalingString = "|0|" + ( Math.round(parseInt(ScaleMax) * .25)) + "|" + ( Math.round(parseInt(ScaleMax) * .5)) + "|" + ( Math.round(parseInt(ScaleMax) * .75)) + "|" + Math.round(parseInt(ScaleMax));
    }
    MarkerStart = Target / ScaleMax;
    MarkerEnd = MarkerStart + 0.002;
    Chart1URL = ChartPath + "&chtt=Leads:++Target=" + Target + "&cht=bhs&chm=r,FF0000,0," + MarkerStart + "," + MarkerEnd + "&chxt=t&chxl=0:" + ScalingString + "&chco=00CCFF,99FFFF&chdl=Open+Leads|Leads&chdlp=bv&chds=0," + ScaleMax + "&chd=t:" + CountOpen + "|" + ChartEnd;
// end CHART CREATION section

    document.getElementById("Chart1").src=Chart1URL; // display the chart by setting an image source to the chart URL
// ========================== END CHART 1 ========================== 

// ========================== CHART 2 ========================== 
// copy this entire section to create a new chart
// This chart code is identical to chart 1 except the database query includes only leads marked as EOI ("pre-application completed").
// it is included separately here so that it can be set with targets and scales which differ from the first chart

// CHART MODIFY section *** This section contains the variables that can easily be changed to affect each chart
    Target = 36;          // an integer: draws a red line on the chart at the specified number of leads. Also adds this information to the title of the chart.
    ScaleMax = 80;        // an integer: highest number on the chart scale.  If this number is zero, then the scale will be automatically be calculated to be 25% higher than the highest number on the chart.
    ScalingString = "|0|10|20|30|40|50|60|70|";  // a string: example "|0|5|10|15|20" - This is a string consisting of a pipe (bar) character followed by a number.  The first is at the bottom of the char, the last is at the top of the chart, and the rest are spread out evenly between the first and last.  You should make the ScaleMax value the one to be at the top of the chart, otherwise the scaling information wont make sense to users. If this is left blank it will automatically create scale labels at zero, 1/4, 1/2, 3/4, and max
// end CHART MODIFY section
    
// CHART CREATION section
    oCountTotal = sforce.connection.query("select count() from Lead where Applying_for_Program_at__c = '" + Loc + "' and Date_Seeking_Admission__c = '" + Cohort + "' and Pre_Application_Completed__c = True");
    oCountOpen = sforce.connection.query("select count() from Lead where Applying_for_Program_at__c = '" + Loc + "' and Date_Seeking_Admission__c = '" + Cohort + "' and Pre_Application_Completed__c = True and (Status = 'EOI Not Screened' or Status = 'Open')");
    CountTotal = oCountTotal.size;
    CountOpen = oCountOpen.size;
    ChartEnd = CountTotal - CountOpen;
    if (ScaleMax == 0) {
        ScaleMax = parseInt(CountTotal) + (parseInt(CountTotal) * .25);
    }
    if (ScalingString == "") {
        ScalingString = "|0|" + ( Math.round(parseInt(ScaleMax) * .25)) + "|" + ( Math.round(parseInt(ScaleMax) * .5)) + "|" + ( Math.round(parseInt(ScaleMax) * .75)) + "|" + Math.round(parseInt(ScaleMax));
    }
    MarkerStart = Target / ScaleMax;
    MarkerEnd = MarkerStart + 0.002;
    Chart2URL = ChartPath + "&chtt=EOI:++Target=" + Target + "&cht=bhs&chm=N*f0*,000000,0,-1,16&chm=r,FF0000,0," + MarkerStart + "," + MarkerEnd + "&chxt=t&chxl=0:" + ScalingString + "&chco=00CC66,99FF66&chdl=Open+EOI|EOI&chdlp=bv&chds=0," + ScaleMax + "&chd=t:" + CountOpen + "|" + ChartEnd;
// end CHART CREATION section

    document.getElementById("Chart2").src=Chart2URL; // display the chart by setting an image source to the chart URL
// ========================== END CHART 2 ========================== 

// ========================== TABLE DATA ========================== 
// Note that the PrideCohort variable is defined above as one of the page settings
    var PrideAppResults, PrideArray, ThisRow, FitCurrent=0, FitEver=0, AppCurrent=0, AppEver=0, IntCurrent=0, IntEver=0, RecCurrent=0, RecEver=0, AccCurrent=0, AccEver=0, TotCurrent=0, TotEver=0 ;
    PrideCohort = PrideCohort.replace(/'/g,"\\'"); // "escapes" single quotes in the name string because those are special characters and will mess up the query on the next line
    PrideAppResults = sforce.connection.query( "select CaseNumber, Status, zReport_FitEver__c, zReport_AppEver__c, zReport_IntEver__c, zReport_RecEver__c, zReport_AccEver__c from case where Cohort__c = '" + PrideCohort + "'" );
    PrideArray = PrideAppResults.getArray("records");
    for( row = 0; row < PrideArray.length; row++ ) {
        ThisRow = PrideArray[row];
        if (ThisRow.get("Status")== "Fit Assessment") {FitCurrent++;}
        if (ThisRow.get("Status")== "Application") {AppCurrent++;}
        if (ThisRow.get("Status")== "Interviews") {IntCurrent++;}
        if (ThisRow.get("Status")== "Recommended for Cohort") {RecCurrent++;}
        if (ThisRow.get("Status")== "Closed Accepted") {AccCurrent++;}
        if (ThisRow.getBoolean("zReport_FitEver__c") == true) {FitEver++;}
        if (ThisRow.getBoolean("zReport_AppEver__c") == true) {AppEver++;}
        if (ThisRow.getBoolean("zReport_IntEver__c") == true) {IntEver++;}
        if (ThisRow.getBoolean("zReport_RecEver__c") == true) {RecEver++;}
        if (ThisRow.getBoolean("zReport_AccEver__c") == true) {AccEver++;}
    }
    document.getElementById("FitCurrent").innerHTML = FitCurrent;
    document.getElementById("AppCurrent").innerHTML = AppCurrent;
    document.getElementById("IntCurrent").innerHTML = IntCurrent;
    document.getElementById("RecCurrent").innerHTML = RecCurrent;
    document.getElementById("AccCurrent").innerHTML = AccCurrent;
    document.getElementById("FitEver").innerHTML = FitEver;
    document.getElementById("AppEver").innerHTML = AppEver;
    document.getElementById("IntEver").innerHTML = IntEver;
    document.getElementById("RecEver").innerHTML = RecEver;
    document.getElementById("AccEver").innerHTML = AccEver;
// ========================== end TABLE DATA ========================== 
</script>

</apex:page>